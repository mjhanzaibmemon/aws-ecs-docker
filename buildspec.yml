version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo "Starting Docker Daemon..."
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - echo "Using region: $AWS_DEFAULT_REGION"
      # Use public ECR repository URI
      - REPOSITORY_URI=public.ecr.aws/u1m9o8m2/aws_code_deploy
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:-latest}
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag "$REPOSITORY_URI:latest" "$REPOSITORY_URI:$IMAGE_TAG"
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing Docker images to ECR..."
      - docker push "$REPOSITORY_URI:latest"
      - docker push "$REPOSITORY_URI:$IMAGE_TAG"
      - echo "Writing definitions file..."
      - printf '[{"name":"exp-code-pipeline","imageUri":"%s"}]' "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
